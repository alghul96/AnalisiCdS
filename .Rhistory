ov_lodds_conf
?autoplot
ov_lodds_conf <- autoplot(mfit.LODDS, main = "Sopravvivenza per LODDS")
ov_lodds_conf
source('~/GitHub/AnalisiCdS/nonParametrica.R', encoding = 'UTF-8', echo=TRUE)
ov_surv_curv
ov_lnr
df_surv_curv <-
autoplot(
difit,
surv.colour = "orange",
censor.colour = "red",
ylim = c(0, 1),
main = "Funzione di sopravvivenza Disease-Free"
)
df_surv_curv
df_surv_curv <-
autoplot(
difit,
surv.colour = "orange",
censor = FALSE,
censor.colour = "red",
ylim = c(0, 1),
main = "Funzione di sopravvivenza Disease-Free"
)
df_surv_curv
df_lnr_conf <- autoplot(difit.LNR)
df_lnr_conf
df_lnr_conf <- autoplot(difit.LNR
censor = FALSE,
main = "Disease-Free per LNR")
df_lnr_conf <- autoplot(difit.LNR,
censor = FALSE,
main = "Disease-Free per LNR")
df_lnr_conf
df_lodds <- autoplot(difit.LODDS,
conf.int = T,
main = "Disease-Free per LODDS"
censor = F)
df_lodds <- autoplot(difit.LODDS,
conf.int = T,
main = "Disease-Free per LODDS",
censor = F)
df_lodds
df_lodds <- autoplot(difit.LODDS,
conf.int = TRUE,
main = "Disease-Free per LODDS",
censor = FALSE)
df_lodds
##### Grafici
ov_surv_curv # overall
ov_cum_haz # cumulative hazards
ov_lnr # con lnr
ov_lnr_conf # con intervalli di confidenza per lnr
ov_lodds # con LODDS
ov_lodds_conf # con intervalli di confidenza per LODDS
ov_loods_lnr<-grid.arrange(ov_lodds, ov_lnr, ncol=2, nrow=1)
df_surv_curv
df_cum_haz
df_lnr
df_lnr_conf
df_lodds_conf
df_lodds
ov_lodds<-autoplot(mfit.LODDS,conf.int = F, main = "Sopravvivenza per LODDS")
ov_loods_lnr<-grid.arrange(ov_lodds, ov_lnr, ncol=2, nrow=1)
df_cum_haz <-
autoplot(
difit,
fun = "cumhaz",
surv.colour = "skyblue1",
censor = FALSE
main = "Funzione cumulativa di rischio (-log S(t)) per Disease-Free"
)
df_cum_haz <-
autoplot(
difit,
fun = "cumhaz",
surv.colour = "skyblue1",
censor = FALSE,
main = "Funzione cumulativa di rischio (-log S(t)) per Disease-Free"
)
df_cum_haz
use(modeldata)
LODDS
summary(coxph(msurv ~ LODDS + LNR))
LODDS
LNR
cor(LODDS,LNR)
cor(survival$`LNR CLASSE`, survival$`LODDS CLASSE`)
coxph(msurv ~ Asa + nLinf12 + stadio + ricN + LNR)
coxph(msurv ~ Asa + nLinf12 + stadio + ricN + LOODS)
coxph(msurv ~ Asa + nLinf12 + stadio   + LODDS)
coxph(msurv ~ Asa + nLinf12 + stadio  + LNR + LODDS)
coxph(msurv ~ Asa + nLinf12 + stadio + LODDS)
coxph(msurv ~ Asa + nLinf12 + stadio + LNR)
survival <- read_excel("D:/Box Sync/#UNI/Casi di Studio/Analisi/survival.xlsx")
library(readxl)
survival <- read_excel("D:/Box Sync/#UNI/Casi di Studio/Analisi/survival.xlsx")
View(survival)
survival = survival[1:202, ]
use(survival)
disurv <- Surv(`DISEASE- FREE SURVIVAL (mesi)`, Malattia == 1)
difit <- survfit((disurv)~1)
options(survfit.print.mean = TRUE)
my.fit = summary(difit)
my.fit
df_surv_curv <-
autoplot(
difit,
surv.colour = "orange",
censor = TRUE,
#censor.colour = "red",
ylim = c(0, 1),
main = "Funzione di sopravvivenza Disease-Free"
)
df_surv_curv
plot(difit, fun="cumhaz", main = "Funzione cumulativa del Rischio (-logS(t))") # funzione cumulativa di rischio
df_cum_haz <-
autoplot(
difit,
fun = "cumhaz",
surv.colour = "skyblue1",
censor = FALSE,
main = "Funzione cumulativa di rischio (-log S(t)) per Disease-Free"
)
difit.LNR = survfit(disurv ~ survival$`LNR CLASSE`)
df_lnr_conf <- autoplot(difit.LNR,
censor = FALSE,
main = "Disease-Free per LNR")
df_lnr <- autoplot(difit.LNR, conf.int = F)
df_lnr_conf
df_lnr_conf <- autoplot(difit.LNR,
censor = TRUE,
main = "Disease-Free per LNR")
df_lnr_conf
df_surv_curv <-
autoplot(
difit,
surv.colour = "orange",
censor = TRUE,
censor.colour = "red",
ylim = c(0, 1),
main = "Funzione di sopravvivenza Disease-Free"
)
df_surv_curv
df_cum_haz <-
autoplot(
difit,
fun = "cumhaz",
surv.colour = "skyblue1",
censor = FALSE,
main = "Funzione cumulativa di rischio (-log S(t)) per Disease-Free"
)
difit.LNR = survfit(disurv ~ survival$`LNR CLASSE`)
df_lnr_conf <- autoplot(difit.LNR,
censor = TRUE,
main = "Disease-Free per LNR")
df_lnr_conf
survdiff(disurv ~ survival$`LNR CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
difit.LODDS = survfit(disurv ~ survival$`LODDS CLASSE`)
df_lodds <- autoplot(difit.LODDS,
conf.int = TRUE,
main = "Disease-Free per LODDS",
censor = TRUE)
df_lodds
df_lodds_conf<-autoplot(difit.LODDS)
survdiff(disurv ~ survival$`LODDS CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
summary(coxph(msurv ~ Asa + nLinf12 + stadio + LNR))
use(modeldata)
summary(coxph(msurv ~ Asa + nLinf12 + stadio + LNR))
surv<-survival
str(surv)
table(surv$`LNR CLASSE`)
table(surv$`LODDS CLASSE`)
classe_lnr<-ggplot(data=surv, aes(`LNR CLASSE`,fill=factor(`LNR CLASSE`))) +
geom_bar() +
ggtitle("Diagramma a barre: Classe LNR") +
xlab("Classe LNR") + ylab("Conteggio") +
scale_fill_discrete(name="Classe LNR") +
geom_text(stat="count",aes(label=..count..),vjust=-0.5,size=4.2)
classe_lodds<-ggplot(data=surv, aes(`LODDS CLASSE`,fill=factor(`LODDS CLASSE`))) +
geom_bar()+
ggtitle("Diagramma a barre: Classe LODDS") +
xlab("Classe LODDS") + ylab("Conteggio") +
scale_fill_discrete(name="Classe LODDS") +
geom_text(stat="count",aes(label=..count..),vjust=-0.5,size=4.2)
barlines <- "#1F3552"
overall_surv<-ggplot(data=surv, aes(`OVERALL SURVIVAL (mesi)`,fill=as.factor(Morto))) +
geom_histogram(bins=20,colour = barlines) +
labs(title="Sopravvivenza totale",x="Mesi", y="Conteggio")
classe_lnr
classe_lodds
overall_surv
eta
ggplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_bar()
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
ggplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_histogram(bins=20)
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
gplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_histogram(bins=20)
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio") +
scale_fill_discrete(name="Classe LODDS")
ggplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_histogram(bins=20)
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio") +
scale_fill_discrete(name="Classe LODDS")
ggplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_histogram(bins=20,colour = black)
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
ggplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_histogram(bins=20,colour = "black")
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
ggplot(data=surv, aes(`ETA'`,fill=factor(`ETA'`))) +
geom_histogram(bins=20,colour = "black")
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,colour = "black")
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,colour = "black")
ggtitle("Diagramma a barre: età") +
xlab("Classe età") + ylab("Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,colour = "black")
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,colour = "black")
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,colour = "black") +
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,colour = "red") +
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
gplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,fill = "red") +
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,fill = "red") +
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,fill = "red",colour="black") +
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
surv$SESSO
ggplot(data=surv, aes(SESSO,fill=factor(SESS0))) +
geom_bar()+
ggtitle("Diagramma a barre: Sesso") +
xlab("Sesso") + ylab("Conteggio")
ggplot(data=surv, aes(SESSO,fill=factor(SESS0))) +
geom_bar()+
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio")
ggplot(data=surv, aes(SESSO,fill=factor(SESS0))) +
geom_bar()
surv$SESSO
ggplot(data=surv, aes(SESSO,fill=factor(surv$SESS0))) +
geom_bar()
ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar()
ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar() +
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio")
ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar() +
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio") +
coord_polar(theta=”y”)
ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar() +
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio") +
coord_polar(theta="y")
ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar() +
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio") +
coord_polar()
ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar() +
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio")
classe_lnr
classe_lodds
overall_surv
table(surv$`LNR CLASSE`)
table(surv$`LODDS CLASSE`)
summary(surv)
sesso
eta<-ggplot(data=surv, aes(`ETA'`)) +
geom_histogram(bins=20,fill = "red",colour="black") +
labs(title="Diagramma a barre: età",x="Classe età", y="Conteggio")
sesso<-ggplot(data=surv, aes(`SESSO`,fill=factor(`SESSO`))) +
geom_bar() +
labs(title="Diagramma a barre: sesso",x="Sesso", y="Conteggio")
sesso
ggplot(data=surv, aes(morto,fill=factor(morto))) +
geom_bar()
surv$Morto
ggplot(data=surv, aes(`MORTO`,fill=factor(`MORTO`))) +
geom_bar()
ggplot(data=surv, aes(`Morto`,fill=factor(`Morto`))) +
geom_bar()
surv$Malattia
ggplot(data=surv, aes(`Malattia`,fill=factor(`Malattia`))) +
geom_bar()
morto<-ggplot(data=surv, aes(`Morto`,fill=factor(`Morto`))) +
geom_bar() +
labs(title="Diagramma a barre: morti",x="E' morto", y="Conteggio")
morto<-ggplot(data=surv, aes(`Malattia`,fill=factor(`Malattia`))) +
geom_bar() +
labs(title="Diagramma a barre: morti",x="Ha avuto una ricaduta", y="Conteggio")
morto<-ggplot(data=surv, aes(`Morto`,fill=factor(`Morto`))) +
geom_bar() +
labs(title="Diagramma a barre: morti",x="Decesso", y="Conteggio")
morto<-ggplot(data=surv, aes(`Malattia`,fill=factor(`Malattia`))) +
geom_bar() +
labs(title="Diagramma a barre: morti",x="Ha avuto una ricaduta", y="Conteggio")
malato<-ggplot(data=surv, aes(`Malattia`,fill=factor(`Malattia`))) +
geom_bar() +
labs(title="Diagramma a barre: morti",x="Ha avuto una ricaduta", y="Conteggio")
morto
malato
morto
morto<-ggplot(data=surv, aes(`Morto`,fill=factor(`Morto`))) +
geom_bar() +
labs(title="Diagramma a barre: morti",x="Decesso", y="Conteggio")
morto
malato
sesso
eta
sesso
shapiro.test(surv$`ETA'`)
?shapiro.test
shapiro.test(surv$`ETA'`, mean = 5, sd = 3)
shapiro.test(surv$`ETA'`)
shapiro.test(rnorm(202, mean = 73, 20))
shapiro.test(rnorm(202, mean = 73, 12))
shapiro.test(rexp(202))
shapiro.test(rt(202))
shapiro.test(rt(202, df = 2))
shapiro.test(rt(202, df = 10))
morto
malato
morto
malato
morto
classe_lnr
classe_lodds
classe_lnr
classe_lodds
cor(survival$`LNR CLASSE`, survival$`LODDS CLASSE`)
ov_lnr
ov_lnr_conf
ov_surv_curv # overall
df_surv_curv
ov_cum_haz # cumulative hazards
df_cum_haz
df_cum_haz <-
autoplot(
difit,
fun = "cumhaz",
surv.colour = "skyblue1",
censor = TRUE,
main = "Funzione cumulativa di rischio (-log S(t)) per Disease-Free"
)
df_cum_haz
ov_lnr_conf # con intervalli di confidenza per lnr
ov_lnr <- autoplot(mfit.LNR, conf.int = F, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR")
ov_lnr_conf <- autoplot(mfit.LNR, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR")
ov_lnr_conf # con intervalli di confidenza per lnr
ov_lodds # con LODDS
ov_lodds_conf # con intervalli di confidenza per LODDS
ov_loods_lnr<-grid.arrange(ov_lodds, ov_lnr, ncol=2, nrow=1)
ov_loods_lnr<-grid.arrange(ov_lodds, ov_lnr, ncol=2, nrow=1)
autoplot(mfit.LODDS,conf.int = F, main = "Sopravvivenza per LODDS", ylim=c(0,1))
autoplot(mfit.LODDS, main = "Sopravvivenza per LODDS")
autoplot(mfit.LODDS, main = "Sopravvivenza per LODDS",ylim=c(0,1))
ov_lnr_conf <- autoplot(mfit.LNR, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR", ylim=c(0,1))
ov_lnr_conf
ov_surv_curv = autoplot(mfit, main = "Funzione di sopravvivenza", xlab = "Mesi dall'operazione", surv.colour = "orange", censor.colour = "red", ylim=c(0,1))
ov_surv_curv
ov_lnr_conf <- autoplot(mfit.LNR, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR", ylim=c(0,1))
ov_lodds_conf <- autoplot(mfit.LODDS, main = "Sopravvivenza per LODDS",ylim=c(0,1))
ov_lnr # con lnr
ov_lnr_conf # con intervalli di confidenza per lnr
ov_lodds # con LODDS
ov_lodds_conf # con intervalli di confidenza per LODDS
ov_lodds_conf # con intervalli di confidenza per LODDS
ov_lodds # con LODDS
ov_lodds<-autoplot(mfit.LODDS,conf.int = F, main = "Sopravvivenza per LODDS", ylim=c(0,1))
ov_lodds
ov_lnr <- autoplot(mfit.LNR, conf.int = F, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR", ylim=c(0,1))
ov_lnr <- autoplot(mfit.LNR, conf.int = F, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR", ylim=c(0,1))
ov_lnr
df_lnr_conf
df_lodds_conf
df_lnr_conf
df_lodds_conf
df_lnr_conf
df_lodds_conf<-autoplot(difit.LODDS,  main = "Disease-Free per LODDS")
df_lodds_conf
survdiff(disurv ~ survival$`LNR CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
survdiff(msurv ~ survival$`LNR CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
survdiff(msurv ~ survival$`LODDS CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
survdiff(msurv ~ survival$`LODDS CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
autoplot(mfit.LODDS,conf.int = F, main = "Sopravvivenza per LODDS", ylim=c(0,1))
survdiff(msurv ~ survival$`LODDS CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
survdiff(msurv ~ survival$`LNR CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
# Creazione dell'oggetto survivial
use(survival)
msurv<- Surv(`OVERALL SURVIVAL (mesi)`, Morto == 1)
mfit <- survfit((msurv)~1)
options(survfit.print.mean = TRUE)
my.fit = summary(mfit)
#### PLOT DELLA CURVA DELLA SOPRAVVIVENZA ####
plot(mfit, main = "Funzione di sopravvivenza", xlab = "Mesi dall'operazione")
ov_surv_curv = autoplot(mfit, main = "Funzione di sopravvivenza", xlab = "Mesi dall'operazione", surv.colour = "orange", censor.colour = "red", ylim=c(0,1))
### STIMA DELLA CUMULATIVE HAZARD FUNCTION ####
plot(mfit, fun="cumhaz", main = "Funzione cumulativa di rischio (-logS(t))") # funzione cumulativa di rischio
ov_cum_haz<-autoplot(mfit,fun="cumhaz",main = "Funzione cumulativa di rischio (-log S(t))",surv.colour = "skyblue1",censor.colour = "blue")
#### ANALISI DELLE COVARIATE: LNR ####
#### Analisi della sopravvivenza
mfit.LNR = survfit(msurv ~ survival$`LNR CLASSE`)
mfit.LNR
par(mfrow = c(1,2))
plot(mfit.LNR, conf.int = FALSE, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR")
plot(mfit.LNR, conf.int = TRUE, col = c("red", "green", "blue"))
legend("topright", legend = c("Classe 0","Classe 1", "Classe 2"), col = c("red", "green", "blue"), lty = c(1,1,1))
ov_lnr <- autoplot(mfit.LNR, conf.int = F, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR", ylim=c(0,1))
ov_lnr_conf <- autoplot(mfit.LNR, col = c("red", "green", "blue"), main = "Sopravvivenza per LNR", ylim=c(0,1))
#### Log Rank test
survdiff(msurv ~ survival$`LNR CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
survdiff(msurv ~ survival$`LODDS CLASSE`, rho = 0) # rifiutiamo l'hp che le curve di sopravvivenza sono uguali
autoplot(
mfit.LNR,
fun = "cloglog",
col = c("red", "green", "blue"),
#ylim = c(-2, 1),
conf.int = FALSE
)
prop.lnr = autoplot(
mfit.LNR,
fun = "cloglog",
col = c("red", "green", "blue"),
#ylim = c(-2, 1),
conf.int = FALSE
)
prop.lodds = autoplot(
mfit.LODDS,
fun = "cloglog",
col = c("red", "green", "blue"),
#ylim = c(-2, 1),
conf.int = FALSE
)
prop.lodds = autoplot(
mfit.LODDS,
fun = "cloglog",
col = c("red", "green", "blue"),
#ylim = c(-2, 1),
conf.int = FALSE
)
grid.arrange(prop.lnr,
prop.lodds,
ncol = 2,
nrow = 2)
grid.arrange(prop.lnr,
prop.lodds,
ncol = 2,
nrow = 1)
grid.arrange(prop.lnr,
prop.lodds,
ncol = 2,
nrow = 1,
main = "Ipotesi dei rischi proporzionali")
prop.lnr = autoplot(
mfit.LNR,
fun = "cloglog",
#ylim = c(-2, 1),
conf.int = FALSE,
main = "Log minus log per LNR"
)
prop.lodds = autoplot(
mfit.LODDS,
fun = "cloglog",
#ylim = c(-2, 1),
conf.int = FALSE,
main = "Log minus log per LODDS"
)
grid.arrange(prop.lnr,
prop.lodds,
ncol = 2,
nrow = 1)
use(modeldata)
summary(coxph(msurv ~ LNR))
summary(coxph(msurv ~ LODDS))
modeldata = as.data.frame(rep(0, 202))
modeldata[, "Asa"] = factor(survival$ASA)
modeldata[,"nLinf12"] = factor(survival$`>12`)
modeldata[, "stadio"] = factor(survival$STADIO)
modeldata[, "ricN"] = factor(survival$Ric_N)
modeldata[, "LNR"] = factor(survival$`LNR CLASSE`)
modeldata[, "LODDS"] = factor(survival$`LODDS CLASSE`)
modeldata = modeldata[,-1]
str(modeldata)
use(modeldata)
summary(coxph(msurv ~ LNR))
summary(coxph(msurv ~ LODDS))
